name: Preprocess
inputs:
- {name: file_path, type: CSV}
- {name: args_json, type: String}
outputs:
- {name: output_file, type: parquet}  # Make sure the output name matches
implementation:
  container:
    image: burntt/nby-cogflow-informer:latest
    command:
    - sh
    - -ec
    - |
      program_path=$(mktemp)
      printf "%s" "$0" > "$program_path"
      python3 -u "$program_path" "$@"
    - |
      import json

      def _make_parent_dirs_and_return_path(file_path: str):
          import os
          os.makedirs(os.path.dirname(file_path), exist_ok=True)
          return file_path

      def preprocess(file_path, output_file, args_json):
          import pandas as pd
          import os
          import json

          # Read the CSV file and convert it to parquet format
          df = pd.read_csv(file_path, header=0, sep=";")

          # Deserialize args from JSON
          args_dict = json.loads(args_json)
          
          # Add args to the dataframe
          df['args'] = json.dumps(args_dict)
          
          df.to_parquet(output_file)

      import argparse
      _parser = argparse.ArgumentParser(prog='Preprocess', description='')
      _parser.add_argument("--file_path", dest="file_path", type=str, required=True, default=argparse.SUPPRESS)
      _parser.add_argument("--output_file", dest="output_file", type=_make_parent_dirs_and_return_path, required=True, default=argparse.SUPPRESS)
      _parser.add_argument("--args_json", dest="args_json", type=str, required=True, default=argparse.SUPPRESS)
      _parsed_args = vars(_parser.parse_args())

      _outputs = preprocess(**_parsed_args)
    args:
    - --file_path
    - {inputPath: file_path}
    - --output_file
    - {outputPath: output_file}
    - --args_json
    - {inputValue: args_json}
